{"ast":null,"code":"var _jsxFileName = \"/Users/anthonypayan/Documents/semaine5/jour4/projet/bloc-notes/src/components/View/index.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction View() {\n  const liste = [{\n    title: \"\",\n    content: \"\"\n  }];\n  console.log(localStorage);\n  const lenstorage = localStorage.length;\n  const keys = Object.keys(localStorage);\n  const values = Object.values(localStorage);\n  var totalresult = [];\n\n  for (var i = 0; i < lenstorage; i++) {\n    console.log(localStorage.key(i));\n    var clé = localStorage.key(i);\n    var contenue = localStorage.getItem(clé);\n    console.log(localStorage.getItem(clé));\n    var line = {\n      title: keys[i],\n      description: values[i]\n    };\n    totalresult.push(line); //liste.map(liste.title= clé, liste.content= contenue) ;\n  }\n\n  console.log(localStorage);\n  console.log(totalresult);\n\n  const handleDelete = () => {\n    localStorage.clear();\n  };\n\n  var indents = [];\n\n  for (var i = 0; i < lenstorage; i++) {\n    indents.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Titre: \" + totalresult[i].title + \", Description: \" + totalresult[i].description\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this));\n    indents.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [indents, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: \"white\",\n        backgroundColor: \"red\"\n      },\n      onClick: handleDelete,\n      children: \"Tout supprimer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = View;\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/anthonypayan/Documents/semaine5/jour4/projet/bloc-notes/src/components/View/index.jsx"],"names":["React","View","liste","title","content","console","log","localStorage","lenstorage","length","keys","Object","values","totalresult","i","key","clé","contenue","getItem","line","description","push","handleDelete","clear","indents","color","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,IAAT,GAAgB;AAEhB,QAAMC,KAAK,GAAG,CAAC;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAAD,CAAd;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACF,QAAMC,UAAU,GAAGD,YAAY,CAACE,MAAhC;AACA,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,YAAZ,CAAb;AACA,QAAMK,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcL,YAAd,CAAf;AACA,MAAIM,WAAW,GAAG,EAAlB;;AACE,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGN,UAAlB,EAA8BM,CAAC,EAA/B,EAAmC;AACjCT,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACQ,GAAb,CAAiBD,CAAjB,CAAZ;AACA,QAAIE,GAAG,GAAGT,YAAY,CAACQ,GAAb,CAAiBD,CAAjB,CAAV;AACA,QAAIG,QAAQ,GAAGV,YAAY,CAACW,OAAb,CAAqBF,GAArB,CAAf;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACW,OAAb,CAAqBF,GAArB,CAAZ;AACA,QAAIG,IAAI,GAAG;AAAChB,MAAAA,KAAK,EAAEO,IAAI,CAACI,CAAD,CAAZ;AAAiBM,MAAAA,WAAW,EAAER,MAAM,CAACE,CAAD;AAApC,KAAX;AACAD,IAAAA,WAAW,CAACQ,IAAZ,CAAiBF,IAAjB,EANiC,CAUrC;AAGC;;AACDd,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYO,WAAZ;;AACA,QAAMS,YAAY,GAAG,MAAM;AACvBf,IAAAA,YAAY,CAACgB,KAAb;AAED,GAHH;;AAIA,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIV,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGN,UAAlB,EAA8BM,CAAC,EAA/B,EAAkC;AAChCU,IAAAA,OAAO,CAACH,IAAR,eAAa;AAAA,gBAAe,YAAYR,WAAW,CAACC,CAAD,CAAX,CAAeX,KAA3B,GAAmC,iBAAnC,GAAuDU,WAAW,CAACC,CAAD,CAAX,CAAeM;AAArF,OAAWN,CAAX;AAAA;AAAA;AAAA;AAAA,YAAb;AACAU,IAAAA,OAAO,CAACH,IAAR,eAAa;AAAA;AAAA;AAAA;AAAA,YAAb;AACD;;AAEC,sBACC;AAAA,eACEG,OADF,eAEG;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,eAAe,EAAE;AAAlC,OAAf;AAAyD,MAAA,OAAO,EAAEJ,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA,kBADD;AAMD;;KAxCQrB,I;AA0CT,eAAeA,IAAf","sourcesContent":["import React from 'react';\n\nfunction View() {\n\nconst liste = [{title: \"\", content: \"\"}];\n  console.log(localStorage);\nconst lenstorage = localStorage.length;\nconst keys = Object.keys(localStorage);\nconst values = Object.values(localStorage);\nvar totalresult = [];\n  for (var i=0; i < lenstorage; i++) {\n    console.log(localStorage.key(i));\n    var clé = localStorage.key(i);\n    var contenue = localStorage.getItem(clé);\n    console.log(localStorage.getItem(clé));\n    var line = {title: keys[i], description: values[i]};\n    totalresult.push(line);\n\n  \n\n//liste.map(liste.title= clé, liste.content= contenue) ;\n\n    \n}\nconsole.log(localStorage);\nconsole.log(totalresult);\nconst handleDelete = () => {\n    localStorage.clear();\n   \n  }\nvar indents = [];\nfor (var i=0; i < lenstorage; i++){\n  indents.push(<span key={i}>{\"Titre: \" + totalresult[i].title + \", Description: \" + totalresult[i].description}</span>)\n  indents.push(<br></br>)\n}\n\n  return (\n   <>\n    {indents}\n      <button style={{color: \"white\", backgroundColor: \"red\"}} onClick={handleDelete}>Tout supprimer</button>\n   </>\n  )\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}