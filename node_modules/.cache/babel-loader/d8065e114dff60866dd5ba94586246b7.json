{"ast":null,"code":"var _jsxFileName = \"/Users/anthonypayan/Documents/semaine5/jour4/projet/bloc-notes/src/components/MarkdownInput/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyControlledInput() {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Input value: \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Type a value\",\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyControlledInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = MyControlledInput;\nexport default MyControlledInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyControlledInput\");","map":{"version":3,"sources":["/Users/anthonypayan/Documents/semaine5/jour4/projet/bloc-notes/src/components/MarkdownInput/index.jsx"],"names":["React","MyControlledInput","value","setValue","useState","onChange","event","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAA1B;;AAEA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAR;AACD,GAFD;;AAMA,sBAEQ;AAAA,4BACJ;AAAA,kCAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAGJ;AAAO,MAAA,WAAW,EAAC,cAAnB;AAAkC,MAAA,KAAK,EAAEA,KAAzC;AAAgD,MAAA,QAAQ,EAAEG;AAA1D;AAAA;AAAA;AAAA;AAAA,YAHI;AAAA,kBAFR;AAUD;;GAnBQJ,iB;;KAAAA,iB;AAqBT,eAAeA,iBAAf","sourcesContent":["import React from 'react';\n\nfunction MyControlledInput() {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n \n\n  return (\n\n          <>\n      <div>Input value: {value}</div>\n      \n      <input placeholder=\"Type a value\" value={value} onChange={onChange} />\n    </>\n\n  );\n  \n}\n\nexport default MyControlledInput;\n"]},"metadata":{},"sourceType":"module"}